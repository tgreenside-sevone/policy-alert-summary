import React from 'react';
import { TScrollLocation } from './EngineCommons';
import { VirtuosoProps } from './Virtuoso';
export interface GroupedVirtuosoMethods {
    scrollToIndex(location: TScrollLocation): void;
}
export declare const GroupedVirtuoso: React.ForwardRefExoticComponent<Pick<VirtuosoProps, "overscan" | "footer" | "computeItemKey" | "prependItemCount" | "itemHeight" | "defaultItemHeight" | "endReached" | "scrollingStateChange" | "atBottomStateChange" | "itemsRendered" | "rangeChanged" | "totalListHeightChanged" | "style" | "dataKey" | "className" | "initialItemCount" | "initialTopMostItemIndex" | "followOutput" | "ScrollContainer" | "FooterContainer" | "ListContainer" | "ItemContainer" | "maxHeightCacheSize" | "scrollSeek"> & {
    groupCounts: number[];
    group: (groupIndex: number) => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>;
    item: (index: number, groupIndex?: number | undefined) => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>;
    groupIndices?: ((indices: number[]) => void) | undefined;
    GroupContainer?: React.FC<Pick<import("./VirtuosoList").TRenderProps, "style" | "key" | "data-index" | "data-known-size">> | undefined;
} & React.RefAttributes<GroupedVirtuosoMethods>>;
