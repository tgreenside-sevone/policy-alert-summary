import { LegendDataType } from '../base-chart/legends/types';
import { LineSeriesType } from '../line';
import { BarSeriesType } from '../bar';
import { ZoomingType } from '../types';
export declare const DEFAULT_THRESHOLD_WIDTH = 2;
export declare const UNSELECTED_OPACITY = 0.2;
export declare const getVerticalNumOfTics: (height?: number) => number;
export declare const getHorizontalNumOfTics: (width?: number) => number;
export declare const generateXScaleInfo: (type: string, userMin: number | "dataMin", userMax: number | "dataMax", legendData: LegendDataType, rawSeries: LineSeriesType[] | BarSeriesType[], numberOfTicks: number, zoomingOptions?: ZoomingType) => {
    minX: any;
    maxX: any;
    interval: number;
};
export declare const calculateMinMaxInterval: (minY: number, maxY: number, numberOfTicks: number, userSetMin: boolean, userSetMax: boolean, lockZeroToCenter: boolean, isDuelY: boolean) => {
    idealMin: number;
    idealMax: number;
    interval: number;
};
export declare const generateYScaleInfo: (type: string, userMin: number | "dataMin", userMax: number | "dataMax", legendData: LegendDataType, rawSeries: LineSeriesType[] | BarSeriesType[], stacked: boolean, lockZeroToCenter: boolean, numberOfTicks: number, chartType: "line" | "bar", yAxisIndex: number, isDuelY: boolean, zoomingOptions?: ZoomingType) => {
    minY: number | "dataMin";
    maxY: number | "dataMax";
    interval: any;
} | {
    minY: number;
    maxY: number;
    interval: number;
};
