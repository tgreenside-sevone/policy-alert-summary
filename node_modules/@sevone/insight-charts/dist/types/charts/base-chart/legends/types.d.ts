/// <reference types="react" />
export declare type LegendDataType = {
    [key: string]: {
        id: string;
        isHidden: boolean;
        name: string;
        color: string;
        direction?: 'left' | 'right' | 'none';
    };
};
export declare type Row = {
    id: string;
    name: string;
    [key: string]: any;
};
declare type GenericColumnType = {
    id: string;
    title: React.ReactNode;
    width?: string | number;
};
declare type SimpleColumnType = GenericColumnType & {
    renderCellClassname?: string;
    render: (row: Row, column: Column) => React.ReactNode;
    sort?: (row: Row, otherRow: Column) => number;
    children?: undefined;
};
declare type GroupedColumnType = GenericColumnType & {
    children: Array<SimpleColumnType>;
    renderCellClassname?: undefined;
    render?: undefined;
    sort?: undefined;
};
export declare type Column = SimpleColumnType | GroupedColumnType;
export declare type TableLegendRowType = Array<Row>;
export declare type TableLegendColumnsType = Array<Column>;
export declare type LegendTypeType = 'standard' | 'table' | 'none';
export declare type StandardLegendPositionType = 'top' | 'bottom' | 'left' | 'right';
export {};
