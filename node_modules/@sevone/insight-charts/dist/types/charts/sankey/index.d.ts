import * as React from 'react';
import { OnClickType } from '../base-chart';
import { ThemeType, BaseTooltipFormatterType } from '../types';
declare type SankeyTooltipFormmater = BaseTooltipFormatterType & {
    data: {
        name: string;
    };
    value: number;
};
export declare type SankeyChartOptionType = {
    animation: boolean;
    tooltip?: {
        trigger: 'item' | 'axis';
        formatter?: (params: SankeyTooltipFormmater) => string;
    };
    series: Array<{
        type: string;
        itemStyle: {
            borderWidth: number;
        };
        lineStyle: {
            color: string;
            curveness: number;
        };
        nodes: Array<{
            name: string;
            itemStyle?: {
                color: string;
            };
        }>;
        links: Array<{
            source: string;
            target: string;
            value: number;
        }>;
        label: {
            color: string;
        };
        draggable: boolean;
        nodeWidth: number;
        nodeGap: number;
    }>;
};
declare type Props = {
    /** The data nodes to render */
    nodes: Array<{
        name: string;
        color?: string;
    }>;
    /** The links between nodes */
    links: Array<{
        source: string;
        target: string;
        value: number;
    }>;
    /** The title of the chart */
    title?: string;
    /** The subtitle of the chart */
    subtitle?: string;
    /** The tooltip options */
    tooltip?: {
        trigger: 'item' | 'axis';
        formatter?: (params: SankeyTooltipFormmater) => string;
    };
    /** An object containing theme specific properties */
    theme?: ThemeType;
    /** Triggerd on click of the chart */
    onClick?: OnClickType;
    /** Enable when chart is being printed */
    isPrintMode?: boolean;
    /** Custom component to be render with the chart */
    customComponent?: React.ReactNode;
    /** The width of a rectangular node */
    nodeWidth?: number;
    /** The gap between any two nodes in each column */
    nodeGap?: number;
};
export default function Sankey(props: Props): JSX.Element;
export {};
