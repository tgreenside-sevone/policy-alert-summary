import * as React from 'react';
import { OnClickType } from '../base-chart';
import { ThemeType, BaseTooltipFormatterType } from '../types';
declare type GaugeTooltipFormatterType = BaseTooltipFormatterType & {
    data: number;
    value: number;
};
declare type GaugeDataType = Array<{
    name?: string;
    value: number;
}>;
declare type GaugeFormatterType = (value: number) => string;
export declare type GaugeChartOptionType = {
    series: Array<{
        name: string;
        data: GaugeDataType;
        type: string;
        min: number;
        max: number;
        radius: string;
        splitNumber: number;
        axisLine: {
            lineStyle: {
                color: Array<Array<number | string>>;
                width: number;
            };
        };
        axisLabel: {
            formatter: GaugeFormatterType;
        };
        detail: {
            formatter: GaugeFormatterType;
            textStyle: {
                fontSize: number;
            };
            offsetCenter: Array<number | string>;
        };
    }>;
    tooltip?: {
        formatter?: (params: GaugeTooltipFormatterType) => string;
    };
};
declare type Props = {
    /** The data object to render */
    series: {
        name: string;
        data: GaugeDataType;
    };
    /** The title of the chart */
    title?: string;
    /** The subtitle of the chart */
    subtitle?: string;
    /** The minium value of the gauge */
    min?: number;
    /** The maxium value of the gauge */
    max?: number;
    /** The radius of the gauge */
    radius?: string;
    /** The number of split segments of the gauge */
    splitNumber?: number;
    /** The color thresholds for the gauge */
    thresholds?: Array<{
        value: number;
        color: string;
    }>;
    /** The value formatter */
    valueFormatter?: GaugeFormatterType;
    /** The tick formatter */
    tickFormatter?: GaugeFormatterType;
    /** The tooltip options */
    tooltip?: {
        formatter?: (params: GaugeTooltipFormatterType) => string;
    };
    /** An object containing theme specific properties */
    theme?: ThemeType;
    /** Triggerd on click of the chart */
    onClick?: OnClickType;
    /** Enable when chart is being printed */
    isPrintMode?: boolean;
    /** Custom component to be render with the chart */
    customComponent?: React.ReactNode;
};
export default function Gauge(props: Props): JSX.Element;
export {};
