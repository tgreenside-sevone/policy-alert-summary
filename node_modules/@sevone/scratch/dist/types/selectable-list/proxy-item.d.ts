import * as React from 'react';
declare type IdType = string | number;
declare type Props = {
    id: IdType;
    isSelected: boolean;
    children: (props: RenderProps) => React.ReactNode;
    onSelectAll: () => void;
    onSelection: (id: IdType, event: React.MouseEvent) => void;
};
declare type RenderProps = {
    isSelected: boolean;
};
declare type UnknownObjType = {
    [key: string]: any;
};
declare class ProxyItem extends React.PureComponent<Props> {
    objectFieldsAreEqual(obj: UnknownObjType, otherObj: UnknownObjType): boolean;
    generateRenderProps: (isSelected: boolean, rest: Object) => RenderProps;
    handleMouseDown: (event: React.MouseEvent<Element, MouseEvent>) => void;
    handleDoubleClick: () => void;
    handleClick: (event: React.MouseEvent<Element, MouseEvent>) => void;
    render(): JSX.Element;
}
export default ProxyItem;
