import * as React from 'react';
import MenuItem from './menu-item';
import SubMenu from './sub-menu';
declare type Props = {
    /** Collapse the menu and show only its icons */
    collapsed?: boolean;
    /** The width the menu should be when collapsed */
    collapsedWidth?: string | number;
    /** The display mode of the menu */
    mode: 'inline' | 'vertical' | 'horizontal';
    /** The path of id's to the selected item */
    selectedPath: Array<string> | null | undefined;
    /** The menu items */
    children: Array<React.ReactElement<typeof MenuItem> | React.ReactElement<typeof SubMenu>>;
    /** Triggered when a user selects a menu item */
    onSelect: (path: Array<string>) => void;
};
declare class Menu extends React.PureComponent<Props> {
    static defaultProps: {
        collapsedWidth: string;
    };
    handleSelect: (id: string) => void;
    findPath(goal: string, children: React.ReactNode): Array<string> | null | undefined;
    findRootMenus: (items: (React.ReactElement<typeof MenuItem, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)> | React.ReactElement<typeof SubMenu, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>)[]) => string[];
    render(): JSX.Element;
}
export default Menu;
