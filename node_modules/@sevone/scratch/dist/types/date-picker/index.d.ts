import * as React from 'react';
declare type Props = {
    /** Unix timestamp in milliseconds of the selected date */
    value: number | null;
    /** The format to display the selected date in */
    format?: string;
    /** Label to describe the picker */
    label?: string;
    /** Placeholder to show if the value is null */
    placeholder?: string;
    /** Whether it is disabled or not */
    disabled?: boolean;
    /** Special effect to indicate status/validation of picker */
    status?: 'error' | 'warning';
    /** Whether to allow the user to select a specific time */
    showTime?: boolean;
    /** Unix timestamps of disabled dates */
    disabledDates?: Array<number>;
    /** Unix timestamps of marked dates */
    markedDates?: Array<number>;
    /** Triggered when a user changes the date */
    onChange: (date: number) => void;
};
declare type State = {
    calendarVisible: boolean;
    calendarPage: {
        month: number;
        year: number;
    };
};
declare class DatePicker extends React.PureComponent<Props, State> {
    static defaultProps: {
        format: string;
        disabledDates: number[];
        markedDates: number[];
    };
    state: {
        calendarVisible: boolean;
        calendarPage: {
            month: number;
            year: number;
        };
    };
    handleCalendarEvents: (event: React.MouseEvent<Element, MouseEvent>) => void;
    handleCalendarDateChange: (dates: number[]) => void;
    handleCalendarPageChange: (page: {
        month: number;
        year: number;
    }) => void;
    handleCalendarVisibilityChange: (visible: boolean) => void;
    handleChange: (dateTime: number) => void;
    handleInputFocus: () => void;
    handleInputBlur: () => void;
    render(): JSX.Element;
}
export { DatePicker };
