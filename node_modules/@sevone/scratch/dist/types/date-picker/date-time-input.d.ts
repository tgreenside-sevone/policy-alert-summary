import * as React from 'react';
declare type Props = {
    dateTime: number | null;
    dateFormat: string;
    disabledDates: Array<number>;
    label: string;
    status?: 'error' | 'warning';
    placeholder?: string;
    disabled: boolean;
    showTime: boolean;
    onChange: (dateTime: number) => void;
    onFocus: () => void;
    onBlur: () => void;
};
declare type State = {
    readableDate: string;
};
declare class DateTimeInput extends React.PureComponent<Props, State> {
    constructor(props: Props);
    componentDidUpdate(prevProps: Props): void;
    isDisabledDate(date: Date, disabledDates: Array<number>): boolean;
    formatDate(dateTime: number): string;
    formatTime(dateTime: number): string;
    handleDateChange: (event: React.ChangeEvent<HTMLInputElement>) => void;
    handleDateFocus: () => void;
    handleDateBlur: () => void;
    handleDateEnter: (event: React.KeyboardEvent<Element>) => void;
    handleDateCommit: () => void;
    handleTimeChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
    handleChange: (value: number) => void;
    render(): JSX.Element;
}
export { DateTimeInput };
