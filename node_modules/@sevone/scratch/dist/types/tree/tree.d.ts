import * as React from 'react';
declare type IdType = string | number;
declare type NodeType = {
    id: IdType;
    label: string;
    children?: Array<NodeType>;
};
declare type Props = {
    /** The nodes to display */
    nodes: Array<NodeType>;
    /** The ids of selected nodes */
    selected: Array<string>;
    /** The ids of expanded nodes */
    expanded: Array<IdType>;
    /** A custom node label */
    renderNode?: React.FunctionComponent<{
        data: NodeType;
        selected: boolean;
        expanded: boolean;
    }>;
    /** Triggered when the user selects a node */
    onSelect: (id: IdType) => void;
    /** Triggered when the user deselected a node */
    onDeselect: (id: IdType) => void;
    /** Triggered when the user expands a node */
    onExpand: (id: IdType) => (void | Promise<any>);
    /** Triggered when the user collapses a node */
    onCollapse: (id: IdType) => void;
};
declare class Tree extends React.PureComponent<Props> {
    render(): JSX.Element;
}
export default Tree;
