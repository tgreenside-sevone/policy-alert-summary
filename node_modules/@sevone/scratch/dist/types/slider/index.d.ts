/// <reference types="lodash" />
import * as React from 'react';
declare type Props = {
    /** Values on the slider that are available to change */
    values: Array<number>;
    /** The minimum value allowed */
    min: number;
    /** The maximum value allowed */
    max: number;
    /** Granularity of values allowed */
    step: number;
    /** Triggered when a user changes a value */
    onChange: (value: Array<number>) => void;
};
declare type State = {
    activeThumb: number | null;
};
declare class Slider extends React.PureComponent<Props, State> {
    static defaultProps: {
        min: number;
        max: number;
        step: number;
    };
    barRef: React.RefObject<HTMLDivElement>;
    thumbRef: Element;
    constructor(props: Props);
    handleThumbDragStart: (event: React.MouseEvent<Element, MouseEvent>, index: number) => void;
    handleThumbDragEnd: () => void;
    handleThumbDrag: ((event: MouseEvent) => void) & import("lodash").Cancelable;
    render(): JSX.Element;
}
export { Slider };
