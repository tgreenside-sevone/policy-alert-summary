declare type StateType = {
    isFocused: boolean;
    isSelected: boolean;
    isDisabled: boolean;
};
declare const _default: ({ status }: {
    status: string;
}) => {
    control: (styles: Object, { isFocused, isDisabled }: StateType) => {
        boxShadow: string;
        borderRadius: string;
        borderColor: string;
        backgroundColor: string;
        color: string;
        fontFamily: string;
        fontSize: string;
        minHeight: string;
        ':hover': {
            borderColor: string;
        };
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    menuPortal: (styles: Object) => {
        zIndex: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    menu: (styles: Object) => {
        boxShadow: string;
        backgroundColor: string;
        border: string;
        color: string;
        borderRadius: string;
        marginTop: string;
        marginBottom: string;
        width: string;
        minWidth: string;
        zIndex: string;
        fontFamily: string;
        fontSize: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    menuList: (styles: Object) => {
        paddingTop: string;
        paddingBottom: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    option: (styles: Object, { isFocused, isSelected }: StateType) => {
        padding: string;
        whiteSpace: string;
        backgroundColor: string;
        color: string;
        ':active': {
            backgroundColor: string;
            color: string;
        };
        overflow: string;
        'text-overflow': string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    placeholder: (styles: Object) => {
        opacity: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    clearIndicator: (styles: Object) => {
        padding: string;
        fontSize: string;
        color: string;
        ':hover': {
            color: string;
        };
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    loadingIndicator: (styles: Object) => {
        padding: string;
        fontSize: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    dropdownIndicator: (styles: Object) => {
        padding: string;
        fontSize: string;
        color: string;
        ':hover': {
            color: string;
        };
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    indicatorSeparator: (styles: Object) => {
        backgroundColor: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    input: (styles: Object) => {
        margin: string;
        paddingTop: string;
        paddingBottom: string;
        color: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    valueContainer: (styles: Object) => {
        padding: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    singleValue: (styles: Object) => {
        color: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    multiValue: (styles: Object, { isDisabled }: StateType) => {
        maxWidth: string;
        backgroundColor: string;
        margin: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    multiValueLabel: (styles: Object, { isDisabled }: StateType) => {
        color: string;
        padding: string;
        lineHeight: string;
        fontSize: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    multiValueRemove: (styles: Object, { isDisabled }: StateType) => {
        color: string;
        paddingRight: string;
        fontSize: string;
        ':hover': {
            backgroundColor: string;
            color: string;
        };
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    loadingMessage: (styles: Object) => {
        color: string;
        padding: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    noOptionsMessage: (styles: Object) => {
        color: string;
        padding: string;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
};
export default _default;
