import * as React from 'react';
import { OptionType, OptionsType } from './types';
declare type Props = {
    /** Text displayed when nothing is selected */
    placeholder?: string;
    /** Label to describe the select */
    label?: React.ReactNode;
    /** Whether it is disabled or not */
    disabled?: boolean;
    /** Whether the current selection can be cleared */
    clearable?: boolean;
    /** Special effect to indicate status/validation of field */
    status?: 'error' | 'warning';
    /** Allow multi selection */
    isMulti?: boolean;
    /** The max number of pills to display with multi selection enabled */
    maxDisplayed?: number;
    /** Placement of the menu relative to the select field */
    menuPlacement?: 'top' | 'bottom' | 'auto';
    /** Allow the user to create nonexistent values */
    creatable?: boolean;
    /** The selected value/values */
    value: OptionType | Array<OptionType> | null | undefined;
    /** Available options to select from */
    options: OptionsType | ((filter: string) => Promise<OptionsType>);
    /**
     * Message to be displayed when there are no options to choose from
     * If no value provided, default message is displayed
     * If the value provided is null - no message displayed
     */
    noOptionsMessage?: string | null;
    /** Triggered when the user modifies the selection */
    onChange: (data: OptionType | Array<OptionType>) => void;
    /** Triggered when the input is blurred */
    onBlur?: () => void;
};
declare class Select extends React.Component<Props> {
    static defaultProps: {
        placeholder: string;
        menuPlacement: string;
    };
    selectRef: React.RefObject<HTMLInputElement>;
    constructor(props: Props);
    handleLabelClick: () => void;
    formatOptionLabel: (data: OptionType) => JSX.Element;
    render(): JSX.Element;
}
export { Select };
