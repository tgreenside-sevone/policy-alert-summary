import * as React from 'react';
declare type Props = {
    tagName: React.ReactType;
    content: string;
    disabled: boolean;
    multiLine?: boolean;
    className?: string;
    onBlur: (value: string) => void;
    onFocus: () => void;
    onChange: (value: string) => void;
};
declare type State = {
    value: string;
    isFocused: boolean;
};
declare class ContentEditable extends React.Component<Props, State> {
    static defaultProps: Partial<Props>;
    state: {
        value: string;
        isFocused: boolean;
    };
    elementRef: React.RefObject<HTMLElement>;
    constructor(props: Props);
    shouldComponentUpdate(nextProps: Props): boolean;
    static getDerivedStateFromProps(props: Props, state: State): {
        value: string;
    };
    sanitizeValue(value: string): string;
    handleChange: () => void;
    handleBlur: () => void;
    handleFocus: () => void;
    handleKeyDown: (event: React.KeyboardEvent<HTMLElement>) => void;
    render(): JSX.Element;
}
export default ContentEditable;
