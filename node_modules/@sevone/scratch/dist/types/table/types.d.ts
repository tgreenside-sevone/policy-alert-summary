/// <reference types="react" />
export declare type IdType = string | number;
export declare type RowType = {
    id: IdType;
    [key: string]: any;
};
declare type GenericColumnType = {
    id: IdType;
    title: React.ReactNode;
    width?: string | number;
    resizable?: boolean;
};
declare type SimpleColumnType = GenericColumnType & {
    renderCellClassname?: string;
    render: (row: RowType, column: ColumnType) => React.ReactNode;
    pinnedRender?: (row: RowType, column: ColumnType) => React.ReactNode;
    sort?: (row: RowType, otherRow: RowType) => number;
    children?: undefined;
};
declare type GroupedColumnType = GenericColumnType & {
    children: Array<SimpleColumnType>;
    renderCellClassname?: undefined;
    render?: undefined;
    pinnedRender?: undefined;
    sort?: undefined;
};
export declare type ColumnType = SimpleColumnType | GroupedColumnType;
export declare type SortByType = {
    column: IdType;
    order: 'ASC' | 'DESC';
};
export {};
