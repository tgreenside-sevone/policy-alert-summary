declare type SpecificTimespanType = {
    startTime: number;
    endTime: number;
    timezone?: string;
};
declare type RelativeTimespanType = {
    label: string;
    timespan: string;
    timezone?: string;
};
declare type CustomRelativeTimespanType = {
    timeString: string;
    timezone?: string;
};
export declare type TimespanPayloadType = SpecificTimespanType | RelativeTimespanType | CustomRelativeTimespanType;
declare const timespanSchema: {
    $id: string;
    oneOf: ({
        type: string;
        properties: {
            startTime: {
                type: string;
                description: string;
            };
            endTime: {
                type: string;
                description: string;
            };
            timezone: {
                type: string;
            };
            label?: undefined;
            timespan?: undefined;
            timeString?: undefined;
        };
        required: string[];
    } | {
        type: string;
        properties: {
            label: {
                type: string;
            };
            timespan: {
                type: string;
            };
            timezone: {
                type: string;
            };
            startTime?: undefined;
            endTime?: undefined;
            timeString?: undefined;
        };
        required: string[];
    } | {
        type: string;
        properties: {
            timeString: {
                type: string;
            };
            timezone: {
                type: string;
            };
            startTime?: undefined;
            endTime?: undefined;
            label?: undefined;
            timespan?: undefined;
        };
        required: string[];
    })[];
};
declare function generateTimespanFacet(timespan: TimespanPayloadType | null): import("@sevone/insight-wdk/dist/types/facet-manager/types").FacetType;
export { timespanSchema, generateTimespanFacet };
