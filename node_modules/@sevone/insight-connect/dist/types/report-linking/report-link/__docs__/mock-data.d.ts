declare const mockData: ({
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        anyOf: {
            $ref: string;
        }[];
        definitions: {
            DEVICE: {
                type: string;
                required: string[];
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            required: string[];
                            properties: {
                                value: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
            };
            OBJECT?: undefined;
            DEVICE_GROUP?: undefined;
            OBJECT_GROUP?: undefined;
            INDICATOR_TYPE?: undefined;
            INTERFACE?: undefined;
            INDICATOR?: undefined;
        };
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: {
        type: string;
        resources: {
            value: string;
        }[];
        flowView?: undefined;
        flowDirection?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        anyOf: {
            $ref: string;
        }[];
        definitions: {
            OBJECT: {
                type: string;
                required: string[];
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            required: string[];
                            properties: {
                                value: {
                                    type: string;
                                };
                                device: {
                                    type: string;
                                    required: string[];
                                    properties: {
                                        value: {
                                            type: string;
                                        };
                                    };
                                };
                                plugin: {
                                    type: string;
                                    required: string[];
                                    properties: {
                                        value: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
            DEVICE?: undefined;
            DEVICE_GROUP?: undefined;
            OBJECT_GROUP?: undefined;
            INDICATOR_TYPE?: undefined;
            INTERFACE?: undefined;
            INDICATOR?: undefined;
        };
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: {
        type: string;
        resources: {
            value: string;
            device: {
                value: string;
            };
            plugin: {
                value: string;
            };
        }[];
        flowView?: undefined;
        flowDirection?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        definitions: {
            DEVICE_GROUP: {
                type: string;
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            DEVICE?: undefined;
            OBJECT?: undefined;
            OBJECT_GROUP?: undefined;
            INDICATOR_TYPE?: undefined;
            INTERFACE?: undefined;
            INDICATOR?: undefined;
        };
        anyOf: {
            $ref: string;
        }[];
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: {
        type: string;
        resources: {
            value: string[];
        }[];
        flowView?: undefined;
        flowDirection?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        definitions: {
            OBJECT_GROUP: {
                type: string;
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                };
                                objectClass: {
                                    type: string;
                                    properties: {
                                        value: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            DEVICE?: undefined;
            OBJECT?: undefined;
            DEVICE_GROUP?: undefined;
            INDICATOR_TYPE?: undefined;
            INTERFACE?: undefined;
            INDICATOR?: undefined;
        };
        anyOf: {
            $ref: string;
        }[];
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: {
        type: string;
        resources: {
            value: string;
            objectClass: {
                value: string;
            };
        }[];
        flowView?: undefined;
        flowDirection?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        definitions: {
            INDICATOR_TYPE: {
                type: string;
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                };
                                objectType: {
                                    type: string;
                                    properties: {
                                        value: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                        plugin: {
                                            type: string;
                                            properties: {
                                                value: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            DEVICE?: undefined;
            OBJECT?: undefined;
            DEVICE_GROUP?: undefined;
            OBJECT_GROUP?: undefined;
            INTERFACE?: undefined;
            INDICATOR?: undefined;
        };
        anyOf: {
            $ref: string;
        }[];
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: {
        type: string;
        resources: {
            value: string;
            objectType: {
                value: string[];
                plugin: {
                    value: string;
                };
            };
        }[];
        flowView?: undefined;
        flowDirection?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        definitions: {
            INTERFACE: {
                type: string;
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                };
                                flowDevice: {
                                    type: string;
                                    properties: {
                                        value: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            DEVICE?: undefined;
            OBJECT?: undefined;
            DEVICE_GROUP?: undefined;
            OBJECT_GROUP?: undefined;
            INDICATOR_TYPE?: undefined;
            INDICATOR?: undefined;
        };
        anyOf: {
            $ref: string;
        }[];
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: null;
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        definitions: {
            INTERFACE: {
                type: string;
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                };
                                flowDevice: {
                                    type: string;
                                    properties: {
                                        value: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            DEVICE?: undefined;
            OBJECT?: undefined;
            DEVICE_GROUP?: undefined;
            OBJECT_GROUP?: undefined;
            INDICATOR_TYPE?: undefined;
            INDICATOR?: undefined;
        };
        anyOf: {
            $ref: string;
        }[];
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: {
        type: string;
        resources: {
            value: number;
            flowDevice: {
                value: string;
            };
        }[];
        flowView?: undefined;
        flowDirection?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        type: string;
        properties: {
            flowView: {
                type: string;
                properties: {
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            flowDirection?: undefined;
            topNView?: undefined;
        };
        required: string[];
        anyOf?: undefined;
        definitions?: undefined;
    };
    data: {
        flowView: {
            value: string;
        };
        type?: undefined;
        resources?: undefined;
        flowDirection?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        definitions: {
            INDICATOR: {
                type: string;
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                deviceName: {
                                    type: string;
                                };
                                objectName: {
                                    type: string;
                                };
                                indicatorType: {
                                    type: string;
                                    properties: {
                                        value: {
                                            type: string;
                                        };
                                        objectType: {
                                            type: string;
                                            properties: {
                                                value: {
                                                    type: string;
                                                    items: {
                                                        type: string;
                                                    };
                                                };
                                                plugin: {
                                                    type: string;
                                                    properties: {
                                                        value: {
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                };
                                            };
                                            required: string[];
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            DEVICE?: undefined;
            OBJECT?: undefined;
            DEVICE_GROUP?: undefined;
            OBJECT_GROUP?: undefined;
            INDICATOR_TYPE?: undefined;
            INTERFACE?: undefined;
        };
        anyOf: {
            $ref: string;
        }[];
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: null;
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        definitions: {
            INDICATOR: {
                type: string;
                properties: {
                    type: {
                        const: string;
                    };
                    resources: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                deviceName: {
                                    type: string;
                                };
                                objectName: {
                                    type: string;
                                };
                                indicatorType: {
                                    type: string;
                                    properties: {
                                        value: {
                                            type: string;
                                        };
                                        objectType: {
                                            type: string;
                                            properties: {
                                                value: {
                                                    type: string;
                                                    items: {
                                                        type: string;
                                                    };
                                                };
                                                plugin: {
                                                    type: string;
                                                    properties: {
                                                        value: {
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                };
                                            };
                                            required: string[];
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            DEVICE?: undefined;
            OBJECT?: undefined;
            DEVICE_GROUP?: undefined;
            OBJECT_GROUP?: undefined;
            INDICATOR_TYPE?: undefined;
            INTERFACE?: undefined;
        };
        anyOf: {
            $ref: string;
        }[];
        type?: undefined;
        properties?: undefined;
        required?: undefined;
    };
    data: {
        type: string;
        resources: {
            deviceName: string;
            objectName: string;
            indicatorType: {
                value: string;
                objectType: {
                    value: string[];
                    plugin: {
                        value: string;
                    };
                };
            };
        }[];
        flowView?: undefined;
        flowDirection?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        type: string;
        properties: {
            flowDirection: {
                type: string;
                properties: {
                    value: {
                        type: string;
                        enum: string[];
                    };
                };
                required: string[];
            };
            flowView?: undefined;
            topNView?: undefined;
        };
        required: string[];
        anyOf?: undefined;
        definitions?: undefined;
    };
    data: {
        flowDirection: {
            value: string;
        };
        type?: undefined;
        resources?: undefined;
        flowView?: undefined;
        topNView?: undefined;
    };
} | {
    __isWdkFacet: boolean;
    timestamp: number;
    schema: {
        $id: string;
        type: string;
        properties: {
            topNView: {
                type: string;
                properties: {
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            flowView?: undefined;
            flowDirection?: undefined;
        };
        required: string[];
        anyOf?: undefined;
        definitions?: undefined;
    };
    data: {
        topNView: {
            value: string;
        };
        type?: undefined;
        resources?: undefined;
        flowView?: undefined;
        flowDirection?: undefined;
    };
})[];
export { mockData };
