export declare type TMP_VALUE = number | string;
declare type PluginType = {
    value: TMP_VALUE;
};
export declare type DeviceType = {
    value: TMP_VALUE;
};
export declare type DeviceGroupType = {
    value: TMP_VALUE;
};
export declare type ObjectType = {
    value: TMP_VALUE;
    description: string;
    device: DeviceType;
    plugin: PluginType;
};
export declare type ObjectGroupType = {
    value: TMP_VALUE;
};
export declare type IndicatorType = {
    value: TMP_VALUE;
    pluginValue: TMP_VALUE;
    deviceValue: TMP_VALUE;
    objectValue: TMP_VALUE;
};
declare type ResourceTypeMap = {
    DEVICE: DeviceType;
    DEVICE_GROUP: DeviceGroupType;
    OBJECT: ObjectType;
    OBJECT_GROUP: ObjectGroupType;
    INDICATOR: IndicatorType;
};
export declare type ResourceTypesType = keyof ResourceTypeMap;
export declare type ResourceType<T extends ResourceTypesType> = {
    type: T;
    resources: Array<ResourceTypeMap[T]>;
};
export declare type ResourceArray<T extends ResourceTypesType> = Array<ResourceType<T>>;
export declare type HierarchicalDataType = ResourceArray<ResourceTypesType>;
export {};
/**
 * Values = 'FOO' | 'BAR'
 * Option<T> = {
 *  value: T,
 *  label: string
 * }
 * => Options<'FOO'> | Options<'BAR'>
 */
